#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ุณูุฑูุจุช ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑููุงุช
ููุชุญูู ูู ูุฌูุฏ ุฃู ุฃุฎุทุงุก ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
"""

import sqlite3
import os
from datetime import datetime

def test_add_expense():
    """ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุตุฑูู ุฌุฏูุฏ"""
    
    # ูุณุงุฑ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    db_path = 'management_system.db'
    
    if not os.path.exists(db_path):
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        conn.row_factory = sqlite3.Row
        cursor = conn.cursor()
        
        print("๐ง ุจุฏุก ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑูู...")
        
        # ุจูุงูุงุช ุงุฎุชุจุงุฑูุฉ
        test_data = {
            'expense_type': 'ุชุดุบููู',
            'category': 'ุงููููุฏ',
            'amount': 150.50,
            'description': 'ุชุนุจุฆุฉ ูููุฏ ููุณูุงุฑุฉ',
            'receipt_number': 'REC-001',
            'date': '2024-01-15',
            'car_id': None,
            'employee_id': None,
            'approved_by': 'admin'
        }
        
        print(f"๐ ุงูุจูุงูุงุช ุงูุงุฎุชุจุงุฑูุฉ: {test_data}")
        
        # ูุญุงููุฉ ุงูุฅุฏุฑุงุฌ
        cursor.execute('''
            INSERT INTO expenses (expense_type, category, amount, description, receipt_number, date, car_id, employee_id, approved_by)
            VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
        ''', (
            test_data['expense_type'],
            test_data['category'],
            test_data['amount'],
            test_data['description'],
            test_data['receipt_number'],
            test_data['date'],
            test_data['car_id'],
            test_data['employee_id'],
            test_data['approved_by']
        ))
        
        conn.commit()
        expense_id = cursor.lastrowid
        print(f"โ ุชู ุฅุถุงูุฉ ุงููุตุฑูู ุจูุฌุงุญ! ID: {expense_id}")
        
        # ุงูุชุญูู ูู ุงูุฅุฏุฑุงุฌ
        cursor.execute('SELECT * FROM expenses WHERE id = ?', (expense_id,))
        expense = cursor.fetchone()
        
        if expense:
            print("๐ ุจูุงูุงุช ุงููุตุฑูู ุงููุถุงู:")
            for key in expense.keys():
                print(f"  {key}: {expense[key]}")
        
        # ุญุฐู ุงูุจูุงูุงุช ุงูุงุฎุชุจุงุฑูุฉ
        cursor.execute('DELETE FROM expenses WHERE id = ?', (expense_id,))
        conn.commit()
        print("๐๏ธ ุชู ุญุฐู ุงูุจูุงูุงุช ุงูุงุฎุชุจุงุฑูุฉ")
        
        conn.close()
        print("๐ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑูู ูุฌุญ!")
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑูู: {e}")
        print(f"ููุน ุงูุฎุทุฃ: {type(e).__name__}")
        import traceback
        traceback.print_exc()
        return False

def check_database_structure():
    """ูุญุต ุจููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    
    db_path = 'management_system.db'
    
    if not os.path.exists(db_path):
        print("โ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุบูุฑ ููุฌูุฏุฉ!")
        return False
    
    try:
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        print("๐ ูุญุต ุจููุฉ ุฌุฏูู ุงููุตุฑููุงุช...")
        
        # ูุญุต ุงูุฃุนูุฏุฉ
        cursor.execute("PRAGMA table_info(expenses)")
        columns = cursor.fetchall()
        
        print("๐ ุฃุนูุฏุฉ ุงูุฌุฏูู:")
        for col in columns:
            print(f"  {col[1]} ({col[2]}) - {'NOT NULL' if col[3] else 'NULL'} - Default: {col[4]}")
        
        # ูุญุต ุนุฏุฏ ุงูุณุฌูุงุช
        cursor.execute("SELECT COUNT(*) FROM expenses")
        count = cursor.fetchone()[0]
        print(f"๐ ุนุฏุฏ ุงููุตุฑููุงุช ุงูุญุงููุฉ: {count}")
        
        # ูุญุต ุขุฎุฑ 3 ูุตุฑููุงุช
        if count > 0:
            cursor.execute("SELECT * FROM expenses ORDER BY created_at DESC LIMIT 3")
            recent_expenses = cursor.fetchall()
            print("๐ ุขุฎุฑ 3 ูุตุฑููุงุช:")
            for i, expense in enumerate(recent_expenses, 1):
                print(f"  {i}. ID: {expense[0]}, ุงูููุน: {expense[1]}, ุงููุจูุบ: {expense[3]}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ูุญุต ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

if __name__ == '__main__':
    print("=" * 60)
    print("๐ง ุณูุฑูุจุช ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑููุงุช")
    print("=" * 60)
    
    # ูุญุต ุจููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    print("\n1๏ธโฃ ูุญุต ุจููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช:")
    db_ok = check_database_structure()
    
    if db_ok:
        print("\n2๏ธโฃ ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ูุตุฑูู:")
        test_ok = test_add_expense()
        
        print("\n" + "=" * 60)
        if test_ok:
            print("โ ุฌููุน ุงูุงุฎุชุจุงุฑุงุช ูุฌุญุช!")
            print("๐ ูููู ุฅุถุงูุฉ ุงููุตุฑููุงุช ุจุฏูู ูุดุงูู")
        else:
            print("โ ูุดู ูู ุงุฎุชุจุงุฑ ุฅุถุงูุฉ ุงููุตุฑูู!")
            print("๐ง ูุฑุฌู ูุฑุงุฌุนุฉ ุงูุฃุฎุทุงุก ุฃุนูุงู")
    else:
        print("โ ูุดููุฉ ูู ุจููุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช!")
    
    print("=" * 60)