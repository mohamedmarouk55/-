#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
ูุธุงู ุงูุฅุฏุงุฑุฉ ุงูุดุงูู
ููู ุงูุชุดุบูู ุงูุฑุฆูุณู ุงููุญุณู
"""

import os
import sys
import logging
from datetime import datetime
import webbrowser
import threading
import time

# ุฅุถุงูุฉ ุงููุฌูุฏ ุงูุญุงูู ุฅูู ูุณุงุฑ Python
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

try:
    from app import app
    from config import config
    from database import db_manager
    from reports import reports_manager
except ImportError as e:
    print(f"ุฎุทุฃ ูู ุงุณุชูุฑุงุฏ ุงููุญุฏุงุช: {e}")
    print("ุชุฃูุฏ ูู ูุฌูุฏ ุฌููุน ุงููููุงุช ุงููุทููุจุฉ")
    sys.exit(1)

def setup_logging():
    """ุฅุนุฏุงุฏ ูุธุงู ุงูุณุฌูุงุช"""
    log_format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    logging.basicConfig(
        level=logging.INFO,
        format=log_format,
        handlers=[
            logging.FileHandler('app.log', encoding='utf-8'),
            logging.StreamHandler(sys.stdout)
        ]
    )
    
    # ุชูููู ูุณุชูู ุณุฌูุงุช Werkzeug
    logging.getLogger('werkzeug').setLevel(logging.WARNING)

def check_dependencies():
    """ุงูุชุญูู ูู ุงูููุชุจุงุช ุงููุทููุจุฉ"""
    required_packages = [
        'flask',
        'werkzeug',
        'jinja2',
        'markupsafe',
        'itsdangerous',
        'click',
        'blinker'
    ]
    
    missing_packages = []
    
    for package in required_packages:
        try:
            __import__(package)
        except ImportError:
            missing_packages.append(package)
    
    if missing_packages:
        print("โ ุงูููุชุจุงุช ุงูุชุงููุฉ ููููุฏุฉ:")
        for package in missing_packages:
            print(f"   - {package}")
        print("\nูุชุซุจูุช ุงูููุชุจุงุช ุงูููููุฏุฉุ ูู ุจุชุดุบูู:")
        print("pip install " + " ".join(missing_packages))
        return False
    
    return True

def initialize_database():
    """ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        print("๐ง ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช...")
        db_manager.init_database()
        print("โ ุชู ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช ุจูุฌุงุญ")
        return True
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

def create_sample_data():
    """ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ (ุงุฎุชูุงุฑู)"""
    conn = db_manager.get_connection()
    cursor = conn.cursor()
    
    # ุงูุชุญูู ูู ูุฌูุฏ ุจูุงูุงุช
    cursor.execute('SELECT COUNT(*) FROM employees')
    employee_count = cursor.fetchone()[0]
    
    if employee_count == 0:
        print("๐ ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ...")
        
        # ุฅุถุงูุฉ ููุธููู ุชุฌุฑูุจููู
        sample_employees = [
            ('ุฃุญูุฏ ูุญูุฏ', 'ูุฏูุฑ ุนุงู', 'ุงูุฅุฏุงุฑุฉ', 15000, '0501234567', 'ahmed@company.com', '2023-01-15'),
            ('ูุงุทูุฉ ุนูู', 'ูุญุงุณุจุฉ', 'ุงููุญุงุณุจุฉ', 8000, '0507654321', 'fatima@company.com', '2023-02-01'),
            ('ูุญูุฏ ุณุงูู', 'ุณุงุฆู', 'ุงูููู', 4000, '0509876543', 'mohammed@company.com', '2023-03-10'),
        ]
        
        for emp in sample_employees:
            cursor.execute('''
                INSERT INTO employees (name, position, department, salary, phone, email, hire_date)
                VALUES (?, ?, ?, ?, ?, ?, ?)
            ''', emp)
        
        # ุฅุถุงูุฉ ุณูุงุฑุงุช ุชุฌุฑูุจูุฉ
        sample_cars = [
            ('ุชูููุชุง', 'ูุงูุฑู', 2022, 'ุฃ ุจ ุฌ 1234', 'ุฃุจูุถ', 'ูุชุงุญ', 80000, 75000),
            ('ูููุฏุง', 'ุฃููุฑุฏ', 2021, 'ุฏ ูู ู 5678', 'ุฃุณูุฏ', 'ูุณุชุฃุฌุฑ', 70000, 65000),
            ('ููุณุงู', 'ุงูุชููุง', 2020, 'ุฒ ุญ ุท 9012', 'ูุถู', 'ุตูุงูุฉ', 60000, 50000),
        ]
        
        for car in sample_cars:
            cursor.execute('''
                INSERT INTO cars (brand, model, year, license_plate, color, status, purchase_price, current_value)
                VALUES (?, ?, ?, ?, ?, ?, ?, ?)
            ''', car)
        
        # ุฅุถุงูุฉ ุณุฌูุงุช ูุงููุฉ ุชุฌุฑูุจูุฉ
        sample_financial = [
            ('ุฅูุฑุงุฏ', 'ุงููุจูุนุงุช', 25000, 'ุฅูุฑุงุฏ ูู ุชุฃุฌูุฑ ุงูุณูุงุฑุงุช', '2024-01-15'),
            ('ูุตุฑูู', 'ุงููููุฏ', 3000, 'ูููุฏ ุงูุณูุงุฑุงุช', '2024-01-16'),
            ('ุฅูุฑุงุฏ', 'ุงูุฎุฏูุงุช', 15000, 'ุฎุฏูุงุช ุงูุตูุงูุฉ', '2024-01-20'),
            ('ูุตุฑูู', 'ุงูุตูุงูุฉ ูุงูุฅุตูุงุญ', 5000, 'ุตูุงูุฉ ุงูุณูุงุฑุงุช', '2024-01-22'),
        ]
        
        for record in sample_financial:
            cursor.execute('''
                INSERT INTO financial_records (type, category, amount, description, date)
                VALUES (?, ?, ?, ?, ?)
            ''', record)
        
        conn.commit()
        print("โ ุชู ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ")
    
    conn.close()

def open_browser(url, delay=2):
    """ูุชุญ ุงููุชุตูุญ ุชููุงุฆูุงู"""
    def open_url():
        time.sleep(delay)
        try:
            webbrowser.open(url)
        except Exception as e:
            print(f"ุชุนุฐุฑ ูุชุญ ุงููุชุตูุญ ุชููุงุฆูุงู: {e}")
    
    thread = threading.Thread(target=open_url)
    thread.daemon = True
    thread.start()

def print_startup_info():
    """ุทุจุงุนุฉ ูุนูููุงุช ุจุฏุก ุงูุชุดุบูู"""
    print("=" * 60)
    print("๐ ูุธุงู ุงูุฅุฏุงุฑุฉ ุงูุดุงูู")
    print("=" * 60)
    print(f"๐ ุงูุชุงุฑูุฎ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print(f"๐ Python: {sys.version.split()[0]}")
    print(f"๐ ุงููุฌูุฏ: {os.path.dirname(os.path.abspath(__file__))}")
    print("=" * 60)

def print_success_info(host, port):
    """ุทุจุงุนุฉ ูุนูููุงุช ุงููุฌุงุญ"""
    print("\n" + "=" * 60)
    print("๐ ุชู ุชุดุบูู ุงููุธุงู ุจูุฌุงุญ!")
    print("=" * 60)
    print(f"๐ ุงูุฑุงุจุท: http://{host}:{port}")
    print("๐ฑ ููููู ุงููุตูู ูููุธุงู ูู ุฃู ุฌูุงุฒ ุนูู ููุณ ุงูุดุจูุฉ")
    print("โน๏ธ  ูุฅููุงู ุงููุธุงู: ุงุถุบุท Ctrl+C")
    print("=" * 60)
    print("\n๐ง ุงูููุฒุงุช ุงููุชุงุญุฉ:")
    print("   โข ุฅุฏุงุฑุฉ ุงูููุธููู ูุงูุฑูุงุชุจ")
    print("   โข ุฅุฏุงุฑุฉ ุฃุณุทูู ุงูุณูุงุฑุงุช")
    print("   โข ุชุชุจุน ุงูุจูุงูุงุช ุงููุงููุฉ")
    print("   โข ุชูุงุฑูุฑ ูุฅุญุตุงุฆูุงุช ุชูุงุนููุฉ")
    print("   โข ูุงุฌูุฉ ูุชุฌุงูุจุฉ ูุญุฏูุซุฉ")
    print("\n๐ ููุญุฉ ุงูุชุญูู ุชุญุชูู ุนูู:")
    print("   โข ุฅุญุตุงุฆูุงุช ููุฑูุฉ")
    print("   โข ุฑุณูู ุจูุงููุฉ ุชูุงุนููุฉ")
    print("   โข ุฅุฌุฑุงุกุงุช ุณุฑูุนุฉ")
    print("=" * 60)

def main():
    """ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ"""
    print_startup_info()
    
    # ุงูุชุญูู ูู ุงูููุชุจุงุช
    print("๐ ุงูุชุญูู ูู ุงูููุชุจุงุช ุงููุทููุจุฉ...")
    if not check_dependencies():
        return 1
    print("โ ุฌููุน ุงูููุชุจุงุช ูุชููุฑุฉ")
    
    # ุฅุนุฏุงุฏ ุงูุณุฌูุงุช
    setup_logging()
    logger = logging.getLogger(__name__)
    
    # ุชููุฆุฉ ูุงุนุฏุฉ ุงูุจูุงูุงุช
    if not initialize_database():
        return 1
    
    # ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ
    create_sample_data()
    
    # ุฅุนุฏุงุฏ ุงูุชุทุจูู
    env = os.environ.get('FLASK_ENV', 'development')
    app.config.from_object(config[env])
    
    # ูุนูููุงุช ุงูุฎุงุฏู
    host = app.config.get('HOST', '0.0.0.0')
    port = app.config.get('PORT', 5000)
    debug = app.config.get('DEBUG', False)
    
    # ูุชุญ ุงููุชุตูุญ ุชููุงุฆูุงู
    if not debug:
        open_browser(f'http://localhost:{port}')
    
    try:
        print_success_info(host, port)
        
        # ุชุดุบูู ุงูุชุทุจูู
        app.run(
            host=host,
            port=port,
            debug=debug,
            use_reloader=False,  # ุชุฌูุจ ุฅุนุงุฏุฉ ุงูุชุดุบูู ุงููุฒุฏูุฌ
            threaded=True
        )
        
    except KeyboardInterrupt:
        print("\n\nโน๏ธ  ุชู ุฅููุงู ุงููุธุงู ุจูุงุณุทุฉ ุงููุณุชุฎุฏู")
        logger.info("ุชู ุฅููุงู ุงููุธุงู ุจูุงุณุทุฉ ุงููุณุชุฎุฏู")
    except Exception as e:
        print(f"\nโ ุฎุทุฃ ูู ุชุดุบูู ุงููุธุงู: {e}")
        logger.error(f"ุฎุทุฃ ูู ุชุดุบูู ุงููุธุงู: {e}")
        return 1
    
    print("๐ ุดูุฑุงู ูุงุณุชุฎุฏุงู ูุธุงู ุงูุฅุฏุงุฑุฉ ุงูุดุงูู!")
    return 0

if __name__ == '__main__':
    sys.exit(main())